{"ast":null,"code":"import axios from 'axios';\nimport API from \"../../../API/API\";\nconst all_voters = \"http://localhost:3000/voters\";\nconst search_by_name = \"http://localhost:3000/voters/search_by_name\";\nconst filter_casted_status = \"http://localhost:3000/voters/filter_casted_status\";\nconst baseURL = 'http://localhost:3000/voters';\nconst consistency_names_url = \"http://localhost:3000/voters/search_by_constituency\";\nconst booth_names_url = \"http://localhost:3000/voters/search_by_booth_name\";\nexport const fetchAllVotersData = async (page, boothName) => {\n  console.log(\"apinames in allvoters\", boothName);\n  try {\n    const response = await axios.get(`${all_voters}?booth_name=${boothName}&page=${page}`);\n    const data = response.data;\n    console.log(\"thisis api data\", data);\n    return data;\n  } catch (error) {\n    console.error('Error fetching all voters data:', error);\n    throw error;\n  }\n};\nexport const searchByNameData = async (name, boothName) => {\n  try {\n    console.log(\"from search api ============>\", name, boothName);\n    const response = await axios.get(`${search_by_name}?voter_name=${name}&booth_name=${boothName}`);\n    console.log(response.data);\n    const data = response.data;\n    console.log(\"Search by Name Data from API ===================>\", data);\n    return data;\n  } catch (error) {\n    console.error('Error searching by name:', error);\n    throw error;\n  }\n};\nexport const filterByCastedStatusData = async (casted, page, boothName) => {\n  try {\n    console.log(\"Filter by Casted Status Data from API +++++>\", casted, page, boothName);\n    const response = await axios.get(`${filter_casted_status}?casted=${casted}&booth_name=${boothName}&page=${page}`);\n    const data = response.data;\n    console.log(\"Filter by Casted Status Data from API ////////////\", data);\n    return data;\n  } catch (error) {\n    console.error('Error filtering by casted status:', error);\n    throw error;\n  }\n};\nexport const updateVoter = async (id, updatedFields) => {\n  try {\n    const response = await axios.put(`http://localhost:3000/voters/${id}`, updatedFields);\n    console.log('Update voter response:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error updating voter:', error);\n    throw error;\n  }\n};\nexport const fetchConsistencyNamesData = async name => {\n  console.log(\"in api\", name);\n  try {\n    const response = await axios.get(`${consistency_names_url}?constituency=${name}`);\n    const data = response.data;\n    console.log(\"api constituency\", data);\n    return data;\n  } catch (error) {\n    console.error('Error fetching consistency names data:', error);\n    throw error;\n  }\n};\nexport const fetchBoothNamesData = async name => {\n  try {\n    console.log(\"Fetching booth names for:\", name);\n    const response = await axios.get(`${booth_names_url}?booth_name=${name}`);\n    const data = response.data;\n    console.log(\"Booth Names Data from API\", data);\n    return data;\n  } catch (error) {\n    console.error('Error fetching booth names data:', error);\n    throw error;\n  }\n};\n\n// export const loginData = async(formdata) =>{\n//   try {\n//     console.log(\"formdata in api \",formdata)\n//     const response = await axios.post('http://localhost:3000/auth/login', formdata);\n\n//       const data = response.data;\n//       console.log(\"data getting from api in api file\",data)\n//     return data;\n//   } catch (error) {\n//     console.error('error fectching login data:', error);\n//     throw error;\n//   }\n// };\n\nconst api = new API();\nconst endPoints = \"auth/login\";\nexport const loginData = async formData => {\n  console.log(\"user product inner product page in api\", formData);\n  return new Promise(async (resolve, reject) => {\n    try {\n      const result = await api.get(`${endPoints}?link_name=${user}`);\n      console.log(\"data getting from api in api file\", result);\n      resolve(result);\n    } catch (error) {\n      console.error(\"Error in login Api:\", error);\n      reject(error);\n    }\n  });\n};","map":{"version":3,"names":["axios","API","all_voters","search_by_name","filter_casted_status","baseURL","consistency_names_url","booth_names_url","fetchAllVotersData","page","boothName","console","log","response","get","data","error","searchByNameData","name","filterByCastedStatusData","casted","updateVoter","id","updatedFields","put","fetchConsistencyNamesData","fetchBoothNamesData","api","endPoints","loginData","formData","Promise","resolve","reject","result","user"],"sources":["/home/actimize/Desktop/Manikanta_Work/github/survey_app_frontend/src/redux/api/getData.js"],"sourcesContent":["import axios from 'axios';\nimport API from \"../../../API/API\";\n\nconst all_voters = \"http://localhost:3000/voters\";\nconst search_by_name = \"http://localhost:3000/voters/search_by_name\";\nconst filter_casted_status = \"http://localhost:3000/voters/filter_casted_status\";\nconst baseURL = 'http://localhost:3000/voters';\nconst consistency_names_url = \"http://localhost:3000/voters/search_by_constituency\";\nconst booth_names_url = \"http://localhost:3000/voters/search_by_booth_name\";\n\nexport const fetchAllVotersData = async (page,boothName) => {\n\n   console.log(\"apinames in allvoters\",boothName)\n  try {\n    const response = await axios.get(`${all_voters}?booth_name=${boothName}&page=${page}`);\n    const data = response.data;\n    console.log(\"thisis api data\",data);\n    return data;\n  } catch (error) {\n    console.error('Error fetching all voters data:', error);\n    throw error;\n  }\n};\n\nexport const searchByNameData = async (name,boothName) => {\n  try {\n    console.log(\"from search api ============>\", name,boothName);\n    const response = await axios.get(`${search_by_name}?voter_name=${name}&booth_name=${boothName}`);\n    console.log(response.data);\n    const data = response.data;\n    console.log(\"Search by Name Data from API ===================>\", data);\n    return data;\n  } catch (error) {\n    console.error('Error searching by name:', error);\n    throw error;\n  }\n};\n\nexport const filterByCastedStatusData = async (casted, page, boothName) => {\n  try {\n    console.log(\"Filter by Casted Status Data from API +++++>\",casted, page, boothName );\n    const response = await axios.get(`${filter_casted_status}?casted=${casted}&booth_name=${boothName}&page=${page}`);\n    const data = response.data;\n    console.log(\"Filter by Casted Status Data from API ////////////\", data);\n    return data;\n  } catch (error) {\n    console.error('Error filtering by casted status:', error);\n    throw error;\n  }\n};\n\nexport const updateVoter = async (id, updatedFields) => {\n\ntry {\n    const response = await axios.put(`http://localhost:3000/voters/${id}`, updatedFields);\n    console.log('Update voter response:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error updating voter:', error);\n    throw error;\n  }\n};\n\nexport const fetchConsistencyNamesData = async (name) => {\n  console.log(\"in api\",name);\n  try {\n    const response = await axios.get(`${consistency_names_url}?constituency=${name}`);\n    const data = response.data;\n    console.log(\"api constituency\",data)\n    return data;\n  } catch (error) {\n    console.error('Error fetching consistency names data:', error);\n    throw error;\n  }\n};\n\nexport const fetchBoothNamesData = async (name) => {\n  try {\n    console.log(\"Fetching booth names for:\", name);\n    const response = await axios.get(`${booth_names_url}?booth_name=${name}`);\n    const data = response.data;\n    console.log(\"Booth Names Data from API\", data);\n    return data;\n  } catch (error) {\n    console.error('Error fetching booth names data:', error);\n    throw error;\n  }\n};\n\n// export const loginData = async(formdata) =>{\n//   try {\n//     console.log(\"formdata in api \",formdata)\n//     const response = await axios.post('http://localhost:3000/auth/login', formdata);\n\n//       const data = response.data;\n//       console.log(\"data getting from api in api file\",data)\n//     return data;\n//   } catch (error) {\n//     console.error('error fectching login data:', error);\n//     throw error;\n//   }\n// };\n\nconst api = new API();\nconst endPoints = \"auth/login\";\nexport const loginData = async (formData) => {\n  console.log(\"user product inner product page in api\",formData);\n  return new Promise(async (resolve, reject) => {\n    try {\n      const result = await api.get(`${endPoints}?link_name=${user}`);\n         console.log(\"data getting from api in api file\",result)\n      resolve(result);\n    } catch (error) {\n      console.error(\"Error in login Api:\", error);\n      reject(error);\n    }\n  });\n};\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}