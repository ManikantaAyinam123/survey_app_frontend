{"ast":null,"code":"// import { \n//   FETCH_ALL_VOTERS_REQUEST, FETCH_ALL_VOTERS_SUCCESS, FETCH_ALL_VOTERS_FAILURE, \n//   SEARCH_BY_NAME_REQUEST, SEARCH_BY_NAME_SUCCESS, SEARCH_BY_NAME_FAILURE, \n//   FILTER_BY_CASTED_STATUS_REQUEST, FILTER_BY_CASTED_STATUS_SUCCESS, FILTER_BY_CASTED_STATUS_FAILURE \n// } from './actionTypes';\n// import { fetchAllVotersData, searchByNameData, filterByCastedStatusData } from '../api/getData'; \n\n// export const fetchAllVotersAction = () => {\n//   return async (dispatch) => {\n//     dispatch({ type: FETCH_ALL_VOTERS_REQUEST });\n//     try {\n//       const data = await fetchAllVotersData(); \n//       console.log(\"this is all data\",data)\n//       dispatch({ type: FETCH_ALL_VOTERS_SUCCESS, payload: data });\n//     } catch (error) {\n//       dispatch({ type: FETCH_ALL_VOTERS_FAILURE, payload: error.message });\n//     }\n//   };\n// };\n\n// export const searchByNameAction = (searchName) => {\n//   return async (dispatch) => {\n//     dispatch({ type: SEARCH_BY_NAME_REQUEST });\n//     try {\n//       const data = await searchByNameData(searchName); \n//       console.log(searchName);\n//       console.log(\"this is name search\")\n//       dispatch({ type: SEARCH_BY_NAME_SUCCESS, payload: data });\n\n//     } catch (error) {\n//       dispatch({ type: SEARCH_BY_NAME_FAILURE, payload: error.message });\n//     }\n//   };\n// };\n\n// export const filterByCastedStatusAction = (casted) => {\n//   return async (dispatch) => {\n//     dispatch({ type: FILTER_BY_CASTED_STATUS_REQUEST });\n//     try {\n//       const data = await filterByCastedStatusData(casted); // Call the function to filter by casted status\n//       console.log(\"this is casted\")\n//       dispatch({ type: FILTER_BY_CASTED_STATUS_SUCCESS, payload: data });\n//     } catch (error) {\n//       dispatch({ type: FILTER_BY_CASTED_STATUS_FAILURE, payload: error.message });\n//     }\n//   };\n// };","map":{"version":3,"names":[],"sources":["/home/actimize/Desktop/Manikanta_Work/github/survey_app_frontend/src/redux/actions/action.js"],"sourcesContent":["// import { \n//   FETCH_ALL_VOTERS_REQUEST, FETCH_ALL_VOTERS_SUCCESS, FETCH_ALL_VOTERS_FAILURE, \n//   SEARCH_BY_NAME_REQUEST, SEARCH_BY_NAME_SUCCESS, SEARCH_BY_NAME_FAILURE, \n//   FILTER_BY_CASTED_STATUS_REQUEST, FILTER_BY_CASTED_STATUS_SUCCESS, FILTER_BY_CASTED_STATUS_FAILURE \n// } from './actionTypes';\n// import { fetchAllVotersData, searchByNameData, filterByCastedStatusData } from '../api/getData'; \n\n// export const fetchAllVotersAction = () => {\n//   return async (dispatch) => {\n//     dispatch({ type: FETCH_ALL_VOTERS_REQUEST });\n//     try {\n//       const data = await fetchAllVotersData(); \n//       console.log(\"this is all data\",data)\n//       dispatch({ type: FETCH_ALL_VOTERS_SUCCESS, payload: data });\n//     } catch (error) {\n//       dispatch({ type: FETCH_ALL_VOTERS_FAILURE, payload: error.message });\n//     }\n//   };\n// };\n\n// export const searchByNameAction = (searchName) => {\n//   return async (dispatch) => {\n//     dispatch({ type: SEARCH_BY_NAME_REQUEST });\n//     try {\n//       const data = await searchByNameData(searchName); \n//       console.log(searchName);\n//       console.log(\"this is name search\")\n//       dispatch({ type: SEARCH_BY_NAME_SUCCESS, payload: data });\n\n//     } catch (error) {\n//       dispatch({ type: SEARCH_BY_NAME_FAILURE, payload: error.message });\n//     }\n//   };\n// };\n\n// export const filterByCastedStatusAction = (casted) => {\n//   return async (dispatch) => {\n//     dispatch({ type: FILTER_BY_CASTED_STATUS_REQUEST });\n//     try {\n//       const data = await filterByCastedStatusData(casted); // Call the function to filter by casted status\n//       console.log(\"this is casted\")\n//       dispatch({ type: FILTER_BY_CASTED_STATUS_SUCCESS, payload: data });\n//     } catch (error) {\n//       dispatch({ type: FILTER_BY_CASTED_STATUS_FAILURE, payload: error.message });\n//     }\n//   };\n// };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}