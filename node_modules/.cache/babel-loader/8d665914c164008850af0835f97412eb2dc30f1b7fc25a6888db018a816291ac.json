{"ast":null,"code":"import axios from \"axios\";\nimport { STATUS_CODE, BASE_URL } from \"./Constants\";\nimport { toast } from \"react-toastify\";\n\n// Request Methods\n\nconst METHOD = {\n  GET: \"get\",\n  POST: \"post\",\n  PUT: \"put\",\n  DELETE: \"delete\"\n};\n\n/*\n\n* API controller that for handling the request\n\n*/\n\nclass API {\n  constructor() {\n    this.isLoggedIn = false;\n    this.userData = {};\n    this.userToken = null;\n    this.baseURL = BASE_URL;\n  }\n  get(url, data) {\n    return new Promise((resolve, reject) => {\n      this.api(METHOD.GET, url, data).then(response => {\n        resolve(response);\n      }).catch(error => {\n        console.log(error);\n      });\n    });\n  }\n  post(url, data) {\n    return new Promise((resolve, reject) => {\n      this.api(METHOD.POST, url, data).then(response => {\n        resolve(response);\n\n        // console.log('response',response);\n      }).catch(error => {\n\n        // console.log(error);\n      });\n    });\n  }\n  put(url, data) {\n    return new Promise((resolve, reject) => {\n      this.api(METHOD.PUT, url, data).then(response => {\n        resolve(response);\n      }).catch(error => {\n\n        // console.log(error);\n      });\n    });\n  }\n  delete(url, data) {\n    return new Promise((resolve, reject) => {\n      this.api(METHOD.DELETE, url, data).then(response => {\n        resolve(response);\n      }).catch(error => {\n        console.log(error);\n      });\n    });\n  }\n\n  // Main function with hold the axios request param\n\n  api(method, url, data) {\n    return new Promise((resolve, reject) => {\n      let axiosConfig = {};\n      axiosConfig.method = method;\n      axiosConfig.url = this.baseURL + url;\n      axiosConfig.headers = this.setHeaders(data);\n\n      //  console.log(\"axiosConfig.headers\", axiosConfig.headers);\n\n      if (data) {\n        // if (data) axiosConfig.params = data;\n\n        if (data) axiosConfig.data = data;\n      }\n      axios(axiosConfig).then(response => {\n        if (response && response.status === STATUS_CODE.INTERNAL_SERVER_ERROR) {\n          toast.error(\"Something went wrong!!\");\n        } else {\n          // resolve(response.data);  \n\n          resolve(response);\n          if (response) {\n\n            // console.log('response', response);\n\n            // stopping this \n\n            // toast.success(response.data?.messages); \n\n            // stopping above\n          }\n\n          // else if (response.status === 200) {\n\n          //   toast.success(response.data?.message); \n\n          // }\n\n          // else {\n\n          //   toast.success(\"Something went wrong\"); \n\n          // }\n        }\n\n        // console.log(\"response\", response);\n      }).catch(error => {\n        let err = error === null || error === void 0 ? void 0 : error.response;\n        let errData = error === null || error === void 0 ? void 0 : error.response.data;\n        console.log(\"ERROR\", error);\n\n        // switch (true) {\n\n        //   case error.response?.data?.email[0] === \"has already been taken\":\n\n        //     toast.error(`Email ${error.response?.data?.email[0]}`);\n\n        //     break;\n\n        //   case error.response.data?.phone_number[0] ===\n\n        //     \"has already been taken\":\n\n        //     toast.error(\n\n        //       `Mobile Number ${error.response?.data?.phone_number[0]}`\n\n        //     );\n\n        //     break;\n\n        //   default:\n\n        //     // Handle other errors if needed\n\n        //     break;\n\n        // }\n\n        // console.log(\"phone_number\", error.response.data?.phone_number[0]);\n\n        // if(\n\n        //   error.response.data?.phone_number[0] === \"has already been taken\"\n\n        // ) {\n\n        //   toast.error(\n\n        //     `Mobile Number ${error.response.data?.phone_number[0]}`\n\n        //   );\n\n        // }\n\n        // if (error.response.data?.email[0] === 'has already been taken') {\n\n        // toast.error(`email ${error.response.data?.email[0]}`);\n\n        // }\n\n        // stopping from here \n\n        // if (\n\n        //   error.response.data?.email &&\n\n        //   error.response.data.email.length > 0\n\n        // ) {\n\n        //   toast.error(`Email ${error.response.data.email[0]}`);\n\n        // } else if (\n\n        //   error.response.data?.phone_number &&\n\n        //   error.response.data.phone_number.length > 0\n\n        // ) {\n\n        //   toast.error(`Mobile Number ${error.response.data.phone_number[0]}`);\n\n        // } else if (\n\n        //   error.response.data.message &&\n\n        //   error.response.data.message.length > 0\n\n        // ) {\n\n        //   toast.error(`${error.response.data.message}`);\n\n        // } else if(err?.status===401){\n\n        //   toast.error(`${errData.errors}`);\n\n        // } else if (err?.status === 422) {\n\n        //   toast.error(`${error.response.data.errors}`);\n\n        // }else {\n\n        //   toast.error(\"An error occurred\");\n\n        // }\n\n        // stopping up to here\n\n        //DEFAULT ERROR HANDLING\n      });\n    });\n  }\n\n  // Set the header for request\n\n  setHeaders(data) {\n    let headers = {};\n    headers[\"accept-language\"] = \"en\";\n    headers[\"Content-Type\"] = \"application/json\";\n    headers[\"Accept\"] = \"application/json\";\n    headers[\"Authorization\"] = localStorage.getItem(\"token\");\n    if (data) {\n      if (data.isMultipart) {\n        headers[\"Content-Type\"] = \"multipart/form-data\";\n      }\n      if (data.headers) {\n        for (var key in data.headers) {\n          if (data.headers.hasOwnProperty(key)) {\n            headers[key] = data.headers[key];\n          }\n        }\n      }\n    }\n    return headers;\n  }\n}\nexport default API;","map":{"version":3,"names":["axios","STATUS_CODE","BASE_URL","toast","METHOD","GET","POST","PUT","DELETE","API","constructor","isLoggedIn","userData","userToken","baseURL","get","url","data","Promise","resolve","reject","api","then","response","catch","error","console","log","post","put","delete","method","axiosConfig","headers","setHeaders","status","INTERNAL_SERVER_ERROR","err","errData","localStorage","getItem","isMultipart","key","hasOwnProperty"],"sources":["/home/actimize/Desktop/Manikanta_Work/github/survey_app_frontend/src/API/API.js"],"sourcesContent":["import axios from \"axios\";\n\nimport { STATUS_CODE, BASE_URL } from \"./Constants\";\n\nimport { toast } from \"react-toastify\";\n\n// Request Methods\n\nconst METHOD = {\n\n  GET: \"get\",\n\n  POST: \"post\",\n\n  PUT: \"put\",\n\n  DELETE: \"delete\",\n\n};\n\n/*\n\n* API controller that for handling the request\n\n*/\n\nclass API {\n\n  isLoggedIn = false;\n\n  userData = {};\n\n  userToken = null;\n\n  constructor() {\n\n    this.baseURL = BASE_URL;\n\n  }\n\n  get(url, data) {\n\n    return new Promise((resolve, reject) => {\n\n      this.api(METHOD.GET, url, data)\n\n        .then((response) => {\n\n          resolve(response);\n\n        })\n\n        .catch((error) => {\n\n          console.log(error);\n\n        });\n\n    });\n\n  }\n\n  post(url, data) {\n\n    return new Promise((resolve, reject) => {\n\n      this.api(METHOD.POST, url, data)\n\n        .then((response) => {\n\n          resolve(response);\n\n          // console.log('response',response);\n\n        })\n\n        .catch((error) => {\n\n          // console.log(error);\n\n        });\n\n    });\n\n  }\n\n  put(url, data) {\n\n    return new Promise((resolve, reject) => {\n\n      this.api(METHOD.PUT, url, data)\n\n        .then((response) => {\n\n          resolve(response);\n\n        })\n\n        .catch((error) => {\n\n          // console.log(error);\n\n        });\n\n    });\n\n  }\n\n  delete(url, data) {\n\n    return new Promise((resolve, reject) => {\n\n      this.api(METHOD.DELETE, url, data)\n\n        .then((response) => {\n\n          resolve(response);\n\n        })\n\n        .catch((error) => {\n\n          console.log(error);\n\n        });\n\n    });\n\n  }\n\n  // Main function with hold the axios request param\n\n  api(method, url, data) {\n\n    return new Promise((resolve, reject) => {\n\n      let axiosConfig = {};\n\n      axiosConfig.method = method;\n\n      axiosConfig.url = this.baseURL + url;\n\n      axiosConfig.headers = this.setHeaders(data);\n\n      //  console.log(\"axiosConfig.headers\", axiosConfig.headers);\n\n      if (data) {\n\n        // if (data) axiosConfig.params = data;\n\n        if (data) axiosConfig.data = data;\n\n      }\n \n      axios(axiosConfig)\n\n        .then((response) => {\n\n          if (\n\n            response &&\n\n            response.status === STATUS_CODE.INTERNAL_SERVER_ERROR\n\n          ) {\n\n            toast.error(\"Something went wrong!!\");\n\n          } else {\n\n            // resolve(response.data);  \n\n            resolve(response);\n\n            if (response) {\n\n              // console.log('response', response);\n\n              // stopping this \n\n              // toast.success(response.data?.messages); \n\n              // stopping above\n\n            }\n\n            // else if (response.status === 200) {\n\n            //   toast.success(response.data?.message); \n\n            // }\n\n            // else {\n\n            //   toast.success(\"Something went wrong\"); \n\n            // }\n\n          }\n\n          // console.log(\"response\", response);\n\n        })\n\n        .catch((error) => {\n\n          let err = error?.response;\n\n          let errData = error?.response.data;\n\n          console.log(\"ERROR\", error);\n\n          // switch (true) {\n\n          //   case error.response?.data?.email[0] === \"has already been taken\":\n\n          //     toast.error(`Email ${error.response?.data?.email[0]}`);\n\n          //     break;\n\n          //   case error.response.data?.phone_number[0] ===\n\n          //     \"has already been taken\":\n\n          //     toast.error(\n\n          //       `Mobile Number ${error.response?.data?.phone_number[0]}`\n\n          //     );\n\n          //     break;\n\n          //   default:\n\n          //     // Handle other errors if needed\n\n          //     break;\n\n          // }\n\n          // console.log(\"phone_number\", error.response.data?.phone_number[0]);\n\n          // if(\n\n          //   error.response.data?.phone_number[0] === \"has already been taken\"\n\n          // ) {\n\n          //   toast.error(\n\n          //     `Mobile Number ${error.response.data?.phone_number[0]}`\n\n          //   );\n\n          // }\n\n          // if (error.response.data?.email[0] === 'has already been taken') {\n\n          // toast.error(`email ${error.response.data?.email[0]}`);\n\n          // }\n\n          // stopping from here \n\n          // if (\n\n          //   error.response.data?.email &&\n\n          //   error.response.data.email.length > 0\n\n          // ) {\n\n          //   toast.error(`Email ${error.response.data.email[0]}`);\n\n          // } else if (\n\n          //   error.response.data?.phone_number &&\n\n          //   error.response.data.phone_number.length > 0\n\n          // ) {\n\n          //   toast.error(`Mobile Number ${error.response.data.phone_number[0]}`);\n\n          // } else if (\n\n          //   error.response.data.message &&\n\n          //   error.response.data.message.length > 0\n\n          // ) {\n\n          //   toast.error(`${error.response.data.message}`);\n\n          // } else if(err?.status===401){\n\n          //   toast.error(`${errData.errors}`);\n\n          // } else if (err?.status === 422) {\n\n          //   toast.error(`${error.response.data.errors}`);\n\n          // }else {\n\n          //   toast.error(\"An error occurred\");\n\n          // }\n\n          // stopping up to here\n\n          //DEFAULT ERROR HANDLING\n\n        });\n\n    });\n\n  }\n\n  // Set the header for request\n\n  setHeaders(data) {\n\n    let headers = {};\n\n    headers[\"accept-language\"] = \"en\";\n\n    headers[\"Content-Type\"] = \"application/json\";\n\n    headers[\"Accept\"] = \"application/json\";\n\n    headers[\"Authorization\"] = localStorage.getItem(\"token\");\n\n    if (data) {\n\n      if (data.isMultipart) {\n\n        headers[\"Content-Type\"] = \"multipart/form-data\";\n\n      }\n\n      if (data.headers) {\n\n        for (var key in data.headers) {\n\n          if (data.headers.hasOwnProperty(key)) {\n\n            headers[key] = data.headers[key];\n\n          }\n\n        }\n\n      }\n\n    }\n\n    return headers;\n\n  }\n\n}\n\nexport default API;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}